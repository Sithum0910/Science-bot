// Minimal chat frontend for Science Chatbot

const chatContainer = document.getElementById('chat-container');
const chatForm = document.getElementById('chat-form');
const chatInput = document.getElementById('chat-input');
const toggleModeBtn = document.getElementById('toggle-mode');

// --- Theme toggle ---
const setTheme = (theme) => {
  document.documentElement.setAttribute('data-theme', theme);
  toggleModeBtn.textContent = theme === "dark" ? "☀️" : "🌙";
  localStorage.setItem("theme", theme);
};

toggleModeBtn.onclick = () => {
  const current = document.documentElement.getAttribute('data-theme');
  setTheme(current === "dark" ? "light" : "dark");
};

(function initTheme() {
  const t = localStorage.getItem("theme") || (window.matchMedia('(prefers-color-scheme: dark)').matches ? "dark" : "light");
  setTheme(t);
})();

// --- Chat rendering ---

function addMessage(role, text, imageUrl = null, source = null) {
  const msg = document.createElement('div');
  msg.className = `message ${role}`;
  const bubble = document.createElement('div');
  bubble.className = 'bubble';
  bubble.textContent = text;
  // If image present, show below text
  if (imageUrl) {
    const img = document.createElement('img');
    img.src = imageUrl;
    img.alt = "Related science image";
    bubble.appendChild(document.createElement('br'));
    bubble.appendChild(img);
  }
  // If source present, show as link
  if (source) {
    const link = document.createElement('a');
    link.href = source;
    link.textContent = "Source";
    link.target = "_blank";
    link.className = "source-link";
    bubble.appendChild(link);
  }
  msg.appendChild(bubble);
  chatContainer.appendChild(msg);
  chatContainer.scrollTop = chatContainer.scrollHeight + 100;
}

// --- Handle chat submit ---
chatForm.onsubmit = async (e) => {
  e.preventDefault();
  const q = chatInput.value.trim();
  if (!q) return;
  addMessage('user', q);
  chatInput.value = "";
  addMessage('bot', "Thinking...");

  try {
    // Change this URL if backend runs elsewhere
    const url = `/ask?question=${encodeURIComponent(q)}`;
    const r = await fetch(url);
    const data = await r.json();
    // Remove last placeholder bot message
    chatContainer.removeChild(chatContainer.lastChild);
    addMessage('bot', data.answer, data.image_url, data.source);
  } catch (err) {
    chatContainer.removeChild(chatContainer.lastChild);
    addMessage('bot', "Sorry, I couldn't get an answer. Please try again.");
  }
};

// --- Focus input on page load ---
window.onload = () => {
  chatInput.focus();
};